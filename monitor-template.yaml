apiVersion: v1
kind: Template
metadata:
  name: monitor-template
  annotations:
    description: "A heart monitor"
    iconClass: "fa fa-heartbeat"
    tags: "monitor,heart,node"
objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    strategy:
      sourceStrategy:
        type: Source
        from:
          kind: ImageStreamTag
          name: nodejs:6
          namespace: openshift
    source:
      type: Git
      git:
        ref: master
        uri: https://github.com/sohrab-/hello-openshift.git
      contextDir: monitor
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    runPolicy: Serial
    triggers:
    - type: ImageChange
      imageChange: {}
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - name: ${APP_NAME}
          image: ${APP_NAME}:latest
          env:
          - name: PORT
            value: "8080"
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
          namespace: disrupt

- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100

parameters:
- name: APP_NAME
  displayName: App Name
  required: true
  value: monitor
